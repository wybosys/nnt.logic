export module configs {~lb}

type unknown = string;
type rowindex = number;
let t:any;

interface pair <K, V> {k:K;v:V;}

{#files}{#.sheets}
    export class {.clazzname} {~lb}
        {#.fields}{?.}{?.comment}//{.comment}{/.comment}
        get {.name}():{.typestring|s} {~lb} return this.cfg[{.index}]; {~rb} {/.}
        {/.fields}
        {#.fields}{?.}static {.indexName} = {.index};{/.}
        {/.fields}
        {#.consts}static {.name} = {.value|s};
        {/.consts}
        static Get(key:{.keytype}):{.clazzname} {~lb}return key in _{.name}Map ? new {.clazzname}(_{.name}Map[key]) : null;{~rb}
        constructor(d:any) {~lb} this.cfg = d; {~rb}
        cfg:any;
    {~rb}
{/.sheets}{/files}
{#files}{#.sheets}
    export const {.name}s:Array<any> = [
        {.datastring|s}
        ];
{/.sheets}{/files}
{#files}{#.sheets}
        t = {.name}s;
        let _{.name}Map:any = {
        {.mapstring|s}
        };
{/.sheets}{/files}

{~rb}
